// Generated by gencpp from file weather/response.msg
// DO NOT EDIT!


#ifndef WEATHER_MESSAGE_RESPONSE_H
#define WEATHER_MESSAGE_RESPONSE_H

#include <ros/service_traits.h>


#include <weather/responseRequest.h>
#include <weather/responseResponse.h>


namespace weather
{

struct response
{

typedef responseRequest Request;
typedef responseResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct response
} // namespace weather


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::weather::response > {
  static const char* value()
  {
    return "5712ed08c2d5465e5c8c268201c42b92";
  }

  static const char* value(const ::weather::response&) { return value(); }
};

template<>
struct DataType< ::weather::response > {
  static const char* value()
  {
    return "weather/response";
  }

  static const char* value(const ::weather::response&) { return value(); }
};


// service_traits::MD5Sum< ::weather::responseRequest> should match 
// service_traits::MD5Sum< ::weather::response > 
template<>
struct MD5Sum< ::weather::responseRequest>
{
  static const char* value()
  {
    return MD5Sum< ::weather::response >::value();
  }
  static const char* value(const ::weather::responseRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::weather::responseRequest> should match 
// service_traits::DataType< ::weather::response > 
template<>
struct DataType< ::weather::responseRequest>
{
  static const char* value()
  {
    return DataType< ::weather::response >::value();
  }
  static const char* value(const ::weather::responseRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::weather::responseResponse> should match 
// service_traits::MD5Sum< ::weather::response > 
template<>
struct MD5Sum< ::weather::responseResponse>
{
  static const char* value()
  {
    return MD5Sum< ::weather::response >::value();
  }
  static const char* value(const ::weather::responseResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::weather::responseResponse> should match 
// service_traits::DataType< ::weather::response > 
template<>
struct DataType< ::weather::responseResponse>
{
  static const char* value()
  {
    return DataType< ::weather::response >::value();
  }
  static const char* value(const ::weather::responseResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // WEATHER_MESSAGE_RESPONSE_H
